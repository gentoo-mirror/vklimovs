diff --git a/.builds/openbsd.yml b/.builds/openbsd.yml
index a0557a99..97b9634c 100644
--- a/.builds/openbsd.yml
+++ b/.builds/openbsd.yml
@@ -1,6 +1,6 @@
-image: openbsd/6.6
+image: openbsd/6.8
 packages:
-- autoconf-2.69p2
+- autoconf-2.69p3
 - automake-1.14.1p1
 - libtool
 sources:
diff --git a/.github/workflows/alpine.yml b/.github/workflows/alpine.yml
index 6f2d29f6..23816eab 100644
--- a/.github/workflows/alpine.yml
+++ b/.github/workflows/alpine.yml
@@ -2,10 +2,10 @@ name: Alpine Linux (amd64 musl openssl)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/.github/workflows/arch.yml b/.github/workflows/arch.yml
index a3528152..2ee226a2 100644
--- a/.github/workflows/arch.yml
+++ b/.github/workflows/arch.yml
@@ -2,10 +2,10 @@ name: Archlinux (amd64 glibc libressl)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/.github/workflows/fedora-gcc10.yml b/.github/workflows/fedora-gcc10.yml
index 54417d62..698d9d5b 100644
--- a/.github/workflows/fedora-gcc10.yml
+++ b/.github/workflows/fedora-gcc10.yml
@@ -2,10 +2,10 @@ name: Fedora (amd64 glibc openssl gcc10)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/.github/workflows/fedora.yml b/.github/workflows/fedora.yml
index b06547b8..448a6eda 100644
--- a/.github/workflows/fedora.yml
+++ b/.github/workflows/fedora.yml
@@ -2,10 +2,10 @@ name: Fedora (amd64 glibc openssl)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/.github/workflows/macos-latest.yml b/.github/workflows/macos-latest.yml
index f008e473..1960a39a 100644
--- a/.github/workflows/macos-latest.yml
+++ b/.github/workflows/macos-latest.yml
@@ -2,10 +2,10 @@ name: macOS Catalina 10.15
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: macos-latest
diff --git a/.github/workflows/ubuntu-gcc10.yml b/.github/workflows/ubuntu-gcc10.yml
index 9f70d7f0..e593df39 100644
--- a/.github/workflows/ubuntu-gcc10.yml
+++ b/.github/workflows/ubuntu-gcc10.yml
@@ -2,10 +2,10 @@ name: Ubuntu (amd64 glibc openssl gcc10)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/.github/workflows/ubuntu.yml b/.github/workflows/ubuntu.yml
index c068c6d5..c4bfd437 100644
--- a/.github/workflows/ubuntu.yml
+++ b/.github/workflows/ubuntu.yml
@@ -2,10 +2,10 @@ name: Ubuntu (amd64 glibc openssl)
 on: 
   push:
     branches:
-      - portable
+      - master
   pull_request:
     branches:
-      - portable
+      - master
 jobs:
   build:
     runs-on: ubuntu-latest
diff --git a/README.md b/README.md
index c00663cd..bc35c16b 100644
--- a/README.md
+++ b/README.md
@@ -1,10 +1,10 @@
 # OpenSMTPD
 
-[![Version](https://img.shields.io/badge/Version-6.6.3p1-brihtgreen.svg)](https://github.com/OpenSMTPD/OpenSMTPD/releases/tag/6.6.3p1)
+[![Version](https://img.shields.io/badge/Version-6.7.1p1-brihtgreen.svg)](https://github.com/OpenSMTPD/OpenSMTPD/releases/tag/6.7.1p1)
 [![Coverity Scan analysis](https://scan.coverity.com/projects/278/badge.svg)](https://scan.coverity.com/projects/opensmtpd-opensmtpd)
 [![Packaging status](https://repology.org/badge/tiny-repos/opensmtpd.svg)](https://repology.org/project/opensmtpd/versions)
 [![License: ISC](https://img.shields.io/badge/License-ISC-blue.svg)](https://www.isc.org/licenses/)
-[![Clang Analysis](https://opensmtpd.email/reports/clang/badge.svg)](https://opensmtpd.email/reports/clang/index.html)
+
 
 
 OpenSMTPD is a FREE implementation of the server-side SMTP protocol as
@@ -29,9 +29,8 @@ mailing list: http://www.opensmtpd.org/list.html
 
 and to join the IRC channel: #OpenSMTPD @ irc.freenode.net
 
-Also note that we have a wiki at
-https://github.com/OpenSMTPD/OpenSMTPD/wiki that you are encouraged to
-contribute to.
+The manual pages are available online at https://www.opensmtpd.org/manual.html,
+which you are encouraged to contribute to.
 
 Cheers!
 
@@ -58,7 +57,7 @@ Note that some distributions have different packages for a same library, you sho
 
 ## Get the source
 
-    git clone -b portable git://github.com/OpenSMTPD/OpenSMTPD.git opensmtpd
+    git clone git://github.com/OpenSMTPD/OpenSMTPD.git opensmtpd
 
 
 ## Build
@@ -78,10 +77,12 @@ libasr directory:
 
     ./configure --with-libasr=/usr/local
 
-### Mac OS X:
+### MacOS:
 
-    ./configure --with-libevent=/opt/local --with-libasr=/opt/local
+    ./configure --with-libevent=/opt/local
 
+Though MacOS includes a copy of bison in the bases system, you will
+need to install a more recent version from, e.g., MacPorts.
 
 ## Install
 
@@ -145,7 +146,7 @@ script allows overriding these using the options:
 
 ### NetBSD, Linux (Debian, Arch Linux, ...)
 
-    mkdir /var/empty  
+    mkdir /var/empty
     useradd -c "SMTP Daemon" -d /var/empty -s /sbin/nologin _smtpd
     useradd -c "SMTPD Queue" -d /var/empty -s /sbin/nologin _smtpq
 
diff --git a/configure.ac b/configure.ac
index 28f1be1f..d46aeae7 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2046,6 +2046,10 @@ AM_CONDITIONAL([NEED_PROGNAME], [test "x$ac_cv_libc_defines___progname" != "xyes
 ##
 
 
+AM_COND_IF([NEED_PROGNAME], [AC_DEFINE([NEED_PROGNAME], [1], [Define to 1 if NEED_PROGNAME])])
+AM_COND_IF([NEED_SETPROCTITLE], [AC_DEFINE([NEED_SETPROCTITLE], [1], [Define to 1 if NEED_SETPROCTITLE])])
+
+
 AC_CONFIG_FILES([Makefile
 		openbsd-compat/Makefile
 		mk/Makefile
diff --git a/contrib/libexec/encrypt/Makefile.am b/contrib/libexec/encrypt/Makefile.am
index 6ad7b82d..2f96e60d 100644
--- a/contrib/libexec/encrypt/Makefile.am
+++ b/contrib/libexec/encrypt/Makefile.am
@@ -1,7 +1,7 @@
 pkglibexec_PROGRAMS = encrypt
 
 encrypt_SOURCES	= encrypt.c
-encrypt_SOURCES	+= $(top_srcdir)/smtpd/log.c
+encrypt_SOURCES	+= $(top_srcdir)/usr.sbin/smtpd/log.c
 
 AM_CPPFLAGS = -I$(top_srcdir)/openbsd-compat
 
diff --git a/contrib/libexec/lockspool/Makefile.am b/contrib/libexec/lockspool/Makefile.am
index dacf5386..2801c101 100644
--- a/contrib/libexec/lockspool/Makefile.am
+++ b/contrib/libexec/lockspool/Makefile.am
@@ -2,7 +2,7 @@ pkglibexec_PROGRAMS =	lockspool
 
 lockspool_SOURCES = lockspool.c
 lockspool_SOURCES += locking.c
-lockspool_SOURCES += $(top_srcdir)/smtpd/log.c
+lockspool_SOURCES += $(top_srcdir)/usr.sbin/smtpd/log.c
 
 EXTRA_DIST =		mail.local.h pathnames.h
 
diff --git a/contrib/libexec/mail.local/Makefile.am b/contrib/libexec/mail.local/Makefile.am
index bd5211a2..217659c1 100644
--- a/contrib/libexec/mail.local/Makefile.am
+++ b/contrib/libexec/mail.local/Makefile.am
@@ -2,7 +2,7 @@ pkglibexec_PROGRAMS =	mail.local
 
 mail_local_SOURCES = mail.local.c
 mail_local_SOURCES += locking.c
-mail_local_SOURCES += $(top_srcdir)/smtpd/log.c
+mail_local_SOURCES += $(top_srcdir)/usr.sbin/smtpd/log.c
 
 EXTRA_DIST =		mail.local.h pathnames.h
 
diff --git a/mk/mail/mail.lmtp/Makefile.am b/mk/mail/mail.lmtp/Makefile.am
index 9847dfdf..29c33dd1 100644
--- a/mk/mail/mail.lmtp/Makefile.am
+++ b/mk/mail/mail.lmtp/Makefile.am
@@ -2,8 +2,8 @@ include	$(top_srcdir)/mk/pathnames
 
 pkglibexec_PROGRAMS =	mail.lmtp
 
-mail_lmtp_SOURCES = $(smtpd_srcdir)/mail.lmtp.c
-mail_lmtp_SOURCES+= $(smtpd_srcdir)/log.c
+mail_lmtp_SOURCES = $(top_srcdir)/usr.sbin/smtpd/mail.lmtp.c
+mail_lmtp_SOURCES+= $(top_srcdir)/usr.sbin/smtpd/log.c
 
 AM_CPPFLAGS=		-I$(top_srcdir)/smtpd			\
 			-I$(top_srcdir)/openbsd-compat
diff --git a/mk/mail/mail.maildir/Makefile.am b/mk/mail/mail.maildir/Makefile.am
index d8f696ee..c2afe4d0 100644
--- a/mk/mail/mail.maildir/Makefile.am
+++ b/mk/mail/mail.maildir/Makefile.am
@@ -2,8 +2,8 @@ include	$(top_srcdir)/mk/pathnames
 
 pkglibexec_PROGRAMS =	mail.maildir
 
-mail_maildir_SOURCES = $(smtpd_srcdir)/mail.maildir.c
-mail_maildir_SOURCES+= $(smtpd_srcdir)/log.c
+mail_maildir_SOURCES = $(top_srcdir)/usr.sbin/smtpd/mail.maildir.c
+mail_maildir_SOURCES+= $(top_srcdir)/usr.sbin/smtpd/log.c
 
 AM_CPPFLAGS=		-I$(top_srcdir)/smtpd			\
 			-I$(top_srcdir)/openbsd-compat
diff --git a/mk/mail/mail.mboxfile/Makefile.am b/mk/mail/mail.mboxfile/Makefile.am
index d57362c0..de5f4ea5 100644
--- a/mk/mail/mail.mboxfile/Makefile.am
+++ b/mk/mail/mail.mboxfile/Makefile.am
@@ -2,8 +2,8 @@ include	$(top_srcdir)/mk/pathnames
 
 pkglibexec_PROGRAMS =	mail.mboxfile
 
-mail_mboxfile_SOURCES = $(smtpd_srcdir)/mail.mboxfile.c
-mail_mboxfile_SOURCES+= $(smtpd_srcdir)/log.c
+mail_mboxfile_SOURCES = $(top_srcdir)/usr.sbin/smtpd/mail.mboxfile.c
+mail_mboxfile_SOURCES+= $(top_srcdir)/usr.sbin/smtpd/log.c
 
 AM_CPPFLAGS=		-I$(top_srcdir)/smtpd			\
 			-I$(top_srcdir)/openbsd-compat
diff --git a/mk/mail/mail.mda/Makefile.am b/mk/mail/mail.mda/Makefile.am
index b04aefda..84bbfdb3 100644
--- a/mk/mail/mail.mda/Makefile.am
+++ b/mk/mail/mail.mda/Makefile.am
@@ -2,8 +2,8 @@ include	$(top_srcdir)/mk/pathnames
 
 pkglibexec_PROGRAMS =	mail.mda
 
-mail_mda_SOURCES = $(smtpd_srcdir)/mail.mda.c
-mail_mda_SOURCES+= $(smtpd_srcdir)/log.c
+mail_mda_SOURCES = $(top_srcdir)/usr.sbin/smtpd/mail.mda.c
+mail_mda_SOURCES+= $(top_srcdir)/usr.sbin/smtpd/log.c
 
 AM_CPPFLAGS=		-I$(top_srcdir)/smtpd			\
 			-I$(top_srcdir)/openbsd-compat
diff --git a/mk/pathnames b/mk/pathnames
index b233ec33..5cff32da 100644
--- a/mk/pathnames
+++ b/mk/pathnames
@@ -1,4 +1,4 @@
-smtpd_srcdir	= $(top_srcdir)/smtpd
+smtpd_srcdir	= $(top_srcdir)/usr.sbin/smtpd
 compat_srcdir	= $(top_srcdir)/openbsd-compat
 regress_srcdir	= $(top_srcdir)/regress/bin
 
diff --git a/mk/smtp/Makefile.am b/mk/smtp/Makefile.am
index e955a271..875cacdc 100644
--- a/mk/smtp/Makefile.am
+++ b/mk/smtp/Makefile.am
@@ -2,13 +2,13 @@ include	$(top_srcdir)/mk/pathnames
 
 bin_PROGRAMS=		smtp
 
-smtp_SOURCES=	$(smtpd_srcdir)/iobuf.c
-smtp_SOURCES+=	$(smtpd_srcdir)/ioev.c
-smtp_SOURCES+=	$(smtpd_srcdir)/log.c
-smtp_SOURCES+=	$(smtpd_srcdir)/smtp_client.c
-smtp_SOURCES+=	$(smtpd_srcdir)/smtpc.c
-smtp_SOURCES+=	$(smtpd_srcdir)/ssl.c
-smtp_SOURCES+=	$(smtpd_srcdir)/ssl_verify.c
+smtp_SOURCES=	$(top_srcdir)/usr.sbin/smtpd/iobuf.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/ioev.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/log.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/smtp_client.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/smtpc.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/ssl.c
+smtp_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/ssl_verify.c
 
 smtp_CFLAGS=		-DIO_TLS
 
@@ -30,7 +30,7 @@ CFLAGS+=		-D_GNU_SOURCE
 CPPFLAGS=		-I$(srcdir) @CPPFLAGS@ $(PATHS) @DEFS@
 
 MANPAGES=		smtp.1.out
-MANPAGES_IN=		$(smtpd_srcdir)/smtp.1
+MANPAGES_IN=		$(top_srcdir)/usr.sbin/smtpd/smtp.1
 
 EXTRA_DIST=		$(MANPAGES_IN)
 
@@ -42,7 +42,7 @@ FIXPATHSCMD=		$(SED) $(PATHSUBS)
 
 
 $(MANPAGES): $(MANPAGES_IN)
-	manpage=$(smtpd_srcdir)/`echo $@ | sed 's/\.out$$//'`; \
+	manpage=$(top_srcdir)/usr.sbin/smtpd/`echo $@ | sed 's/\.out$$//'`; \
 	if test "$(MANTYPE)" = "man"; then \
 		$(FIXPATHSCMD) $${manpage} | $(AWK) -f $(srcdir)/../mdoc2man.awk > $@; \
 	else \
diff --git a/mk/smtpctl/Makefile.am b/mk/smtpctl/Makefile.am
index 3aac9bd7..f7d1b418 100644
--- a/mk/smtpctl/Makefile.am
+++ b/mk/smtpctl/Makefile.am
@@ -2,37 +2,37 @@ include	$(top_srcdir)/mk/pathnames
 
 sbin_PROGRAMS=		smtpctl
 
-smtpctl_SOURCES=	$(smtpd_srcdir)/enqueue.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/parser.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/log.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/envelope.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/queue_backend.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/queue_fs.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/smtpctl.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/spfwalk.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/util.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/unpack_dns.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/compress_backend.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/compress_gzip.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/to.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/expand.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/tree.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/dict.c
+smtpctl_SOURCES=	$(top_srcdir)/usr.sbin/smtpd/enqueue.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/parser.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/log.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/envelope.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/queue_backend.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/queue_fs.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/smtpctl.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/spfwalk.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/util.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/unpack_dns.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/compress_backend.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/compress_gzip.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/to.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/expand.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/tree.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/dict.c
 
 if HAVE_DB_API
-smtpctl_SOURCES+=	$(smtpd_srcdir)/config.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/parse.y
-smtpctl_SOURCES+=	$(smtpd_srcdir)/limit.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/table.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/table_static.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/table_db.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/table_getpwnam.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/table_proc.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/mailaddr.c
-smtpctl_SOURCES+=	$(smtpd_srcdir)/makemap.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/config.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/parse.y
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/limit.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/table.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/table_static.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/table_db.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/table_getpwnam.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/table_proc.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/mailaddr.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/makemap.c
 endif
 
-smtpctl_SOURCES+=	$(smtpd_srcdir)/crypto.c
+smtpctl_SOURCES+=	$(top_srcdir)/usr.sbin/smtpd/crypto.c
 
 smtpctl_CFLAGS=		-DNO_IO -DCONFIG_MINIMUM
 smtpctl_CFLAGS+=	-DPATH_GZCAT=\"$(ZCAT)\" \
@@ -59,7 +59,7 @@ CFLAGS+=		-D_GNU_SOURCE
 CPPFLAGS=		-I$(srcdir) @CPPFLAGS@ $(PATHS) @DEFS@
 
 MANPAGES=		smtpctl.8.out sendmail.8.out makemap.8.out newaliases.8.out
-MANPAGES_IN=		$(smtpd_srcdir)/smtpctl.8 $(smtpd_srcdir)/sendmail.8 $(smtpd_srcdir)/makemap.8 $(smtpd_srcdir)/newaliases.8
+MANPAGES_IN=		$(top_srcdir)/usr.sbin/smtpd/smtpctl.8 $(top_srcdir)/usr.sbin/smtpd/sendmail.8 $(top_srcdir)/usr.sbin/smtpd/makemap.8 $(top_srcdir)/usr.sbin/smtpd/newaliases.8
 
 EXTRA_DIST=		$(MANPAGES_IN)
 
@@ -74,7 +74,7 @@ AM_CPPFLAGS+=	-I$(top_srcdir)/openbsd-compat/libasr
 endif
 
 $(MANPAGES): $(MANPAGES_IN)
-	manpage=$(smtpd_srcdir)/`echo $@ | sed 's/\.out$$//'`; \
+	manpage=$(top_srcdir)/usr.sbin/smtpd/`echo $@ | sed 's/\.out$$//'`; \
 	if test "$(MANTYPE)" = "man"; then \
 		$(FIXPATHSCMD) $${manpage} | $(AWK) -f $(srcdir)/../mdoc2man.awk > $@; \
 	else \
diff --git a/mk/smtpd/Makefile.am b/mk/smtpd/Makefile.am
index bf7a483b..6d652d48 100644
--- a/mk/smtpd/Makefile.am
+++ b/mk/smtpd/Makefile.am
@@ -14,84 +14,84 @@ include $(top_srcdir)/mk/pathnames
 
 sbin_PROGRAMS=		smtpd
 
-smtpd_SOURCES=		$(smtpd_srcdir)/aliases.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/bounce.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ca.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/cert.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/compress_backend.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/config.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/control.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/dict.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/dns.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/esc.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/envelope.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/expand.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/forward.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/iobuf.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ioev.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/limit.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/lka.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/lka_filter.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/lka_session.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/log.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mda.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mda_mbox.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mda_unpriv.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mda_variables.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mproc.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mailaddr.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mta.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/mta_session.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/parse.y
-smtpd_SOURCES+=		$(smtpd_srcdir)/pony.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/proxy.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue_backend.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/report_smtp.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/resolver.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/rfc5322.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ruleset.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/runq.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/scheduler.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/scheduler_backend.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/smtp.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/smtp_session.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/smtpd.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/srs.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ssl.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ssl_smtpd.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/ssl_verify.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/stat_backend.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/table.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/to.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/tree.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/unpack_dns.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/util.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/waitq.c
+smtpd_SOURCES=		$(top_srcdir)/usr.sbin/smtpd/aliases.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/bounce.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ca.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/cert.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/compress_backend.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/config.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/control.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/dict.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/dns.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/esc.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/envelope.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/expand.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/forward.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/iobuf.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/limit.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/lka.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/lka_filter.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/lka_session.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/log.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mda.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mda_mbox.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mda_unpriv.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mda_variables.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mproc.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mailaddr.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mta.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/mta_session.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/parse.y
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/pony.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/proxy.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue_backend.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/report_smtp.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/resolver.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/rfc5322.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ruleset.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/runq.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/scheduler.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/scheduler_backend.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/smtp.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/smtp_session.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/smtpd.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/srs.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ssl.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ssl_smtpd.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ssl_verify.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/stat_backend.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/table.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/to.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/tree.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/unpack_dns.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/util.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/waitq.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/ioev.c
 
 # backends
-smtpd_SOURCES+=		$(smtpd_srcdir)/crypto.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/compress_gzip.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/crypto.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/compress_gzip.c
 if HAVE_DB_API
-smtpd_SOURCES+=		$(smtpd_srcdir)/table_db.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/table_db.c
 endif
-smtpd_SOURCES+=		$(smtpd_srcdir)/table_getpwnam.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/table_proc.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/table_static.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue_fs.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue_null.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue_proc.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/queue_ram.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/scheduler_null.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/scheduler_proc.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/scheduler_ramqueue.c
-smtpd_SOURCES+=		$(smtpd_srcdir)/stat_ramstat.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/table_getpwnam.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/table_proc.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/table_static.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue_fs.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue_null.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue_proc.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/queue_ram.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/scheduler_null.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/scheduler_proc.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/scheduler_ramqueue.c
+smtpd_SOURCES+=		$(top_srcdir)/usr.sbin/smtpd/stat_ramstat.c
 
 
 smtpd_CFLAGS=		-DIO_TLS
 smtpd_CFLAGS+=		-DCA_FILE=\"$(CA_FILE)\"
 
-AM_CPPFLAGS=		-I$(smtpd_srcdir)	\
+AM_CPPFLAGS=		-I$(top_srcdir)/usr.sbin/smtpd	\
 			-I$(compat_srcdir)
 if !NEED_ERR_H
 AM_CPPFLAGS += -I$(top_srcdir)/openbsd-compat/err_h
@@ -111,35 +111,37 @@ LDADD=			$(LIBCOMPAT) $(DB_LIB) $(ASR_LIB)
 # EAI_NODATA defined
 # {v,}asprintf
 # setres{g,u}id
-CFLAGS+=		-D_GNU_SOURCE -DNEED_EVENT_ASR_RUN
-CPPFLAGS=		-I$(srcdir) @CPPFLAGS@ $(PATHS) @DEFS@
+AM_CFLAGS=		-D_GNU_SOURCE -DNEED_EVENT_ASR_RUN
+AM_CPPFLAGS+=		-I$(srcdir) $(PATHS) @DEFS@
 
 MANPAGES=		aliases.5.out forward.5.out smtpd.8.out	\
 			smtpd.conf.5.out table.5.out
 
-MANPAGES_IN=		$(smtpd_srcdir)/aliases.5
-MANPAGES_IN+=		$(smtpd_srcdir)/forward.5
-MANPAGES_IN+=		$(smtpd_srcdir)/smtpd.8
-MANPAGES_IN+=		$(smtpd_srcdir)/smtpd.conf.5
-MANPAGES_IN+=		$(smtpd_srcdir)/table.5
+MANPAGES_IN=		$(top_srcdir)/usr.sbin/smtpd/aliases.5
+MANPAGES_IN+=		$(top_srcdir)/usr.sbin/smtpd/forward.5
+MANPAGES_IN+=		$(top_srcdir)/usr.sbin/smtpd/smtpd.8
+MANPAGES_IN+=		$(top_srcdir)/usr.sbin/smtpd/smtpd.conf.5
+MANPAGES_IN+=		$(top_srcdir)/usr.sbin/smtpd/table.5
 
 CONFIGFILES=		smtpd.conf.out
-CONFIGFILES_IN=		$(smtpd_srcdir)/smtpd.conf
+CONFIGFILES_IN=		$(top_srcdir)/usr.sbin/smtpd/smtpd.conf
 
 EXTRA_DIST=		$(CONFIGFILES_IN) $(MANPAGES_IN)
 
 
-EXTRA_DIST+=		$(smtpd_srcdir)/smtpd.h
-EXTRA_DIST+=		$(smtpd_srcdir)/smtpd-api.h
-EXTRA_DIST+=		$(smtpd_srcdir)/smtpd-defines.h
-EXTRA_DIST+=		$(smtpd_srcdir)/ioev.h
-EXTRA_DIST+=		$(smtpd_srcdir)/iobuf.h
-EXTRA_DIST+=		$(smtpd_srcdir)/log.h
-EXTRA_DIST+=		$(smtpd_srcdir)/ssl.h
-EXTRA_DIST+=		$(smtpd_srcdir)/parser.h
-
-EXTRA_DIST+=		$(backends_srcdir)/queue_utils.h
-EXTRA_DIST+=		$(filters_srcdir)/asr_event.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/rfc5322.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/unpack_dns.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/tree.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/smtp.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/smtpd.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/smtpd-api.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/smtpd-defines.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/ioev.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/iobuf.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/log.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/ssl.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/parser.h
+EXTRA_DIST+=		$(top_srcdir)/usr.sbin/smtpd/dict.h
 
 PATHSUBS=		-e 's|/etc/mail/|$(sysconfdir)/|g'			\
 			-e 's|/var/run/smtpd.sock|$(sockdir)/smtpd.sock|g' \
@@ -148,7 +150,7 @@ PATHSUBS=		-e 's|/etc/mail/|$(sysconfdir)/|g'			\
 FIXPATHSCMD=		$(SED) $(PATHSUBS)
 
 $(MANPAGES): $(MANPAGES_IN)
-	manpage=$(smtpd_srcdir)/`echo $@ | sed 's/\.out$$//'`; \
+	manpage=$(top_srcdir)/usr.sbin/smtpd/`echo $@ | sed 's/\.out$$//'`; \
 	if test "$(MANTYPE)" = "man"; then \
 		$(FIXPATHSCMD) $${manpage} | $(AWK) -f $(srcdir)/../mdoc2man.awk > $@; \
 	else \
@@ -156,8 +158,8 @@ $(MANPAGES): $(MANPAGES_IN)
 	fi
 
 $(CONFIGFILES): $(CONFIGFILES_IN)
-	conffile=$(smtpd_srcdir)/`echo $@ | sed 's/.out$$//'`; \
-	$(CAT) $(srcdir)/$${conffile} > $@
+	conffile=$(top_srcdir)/usr.sbin/smtpd/`echo $@ | sed 's/.out$$//'`; \
+	$(CAT) $${conffile} > $@
 
 
 # smtpd.conf
@@ -184,8 +186,8 @@ install-exec-hook: $(CONFIGFILES) $(MANPAGES)
 
 uninstall-hook:
 # XXX to make "make distcheck" happy we need to rm smtpd.conf
-#	rm $(DESTDIR)$(sysconfdir)/smtpd.conf
-	rm -f	$(DESTDIR)$(mandir)/$(mansubdir)5/aliases.5			\
+	rm -f	$(DESTDIR)$(sysconfdir)/smtpd.conf				\
+		$(DESTDIR)$(mandir)/$(mansubdir)5/aliases.5			\
 		$(DESTDIR)$(mandir)/$(mansubdir)5/forward.5			\
 		$(DESTDIR)$(mandir)/$(mansubdir)5/table.5			\
 		$(DESTDIR)$(mandir)/$(mansubdir)5/smtpd.conf.5			\
diff --git a/openbsd-compat/Makefile.am b/openbsd-compat/Makefile.am
index 01a3efe7..170c2b6c 100644
--- a/openbsd-compat/Makefile.am
+++ b/openbsd-compat/Makefile.am
@@ -1,6 +1,6 @@
 noinst_LIBRARIES = libopenbsd.a
 
-AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/smtpd -I$(top_srcdir)/openbsd-compat
+AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/usr.sbin/smtpd -I$(top_srcdir)/openbsd-compat
 
 libopenbsd_a_SOURCES =	empty.c
 
@@ -216,7 +216,7 @@ EXTRA_DIST +=	defines.h
 EXTRA_DIST +=	entropy.h
 EXTRA_DIST +=	imsg.h
 EXTRA_DIST +=	includes.h
-EXTRA_DIST +=	log.h
+EXTRA_DIST +=	$(top_srcdir)/usr.sbin/smtpd/log.h
 EXTRA_DIST +=	openbsd-compat.h
 EXTRA_DIST +=	sys/queue.h
 EXTRA_DIST +=	sys/tree.h
@@ -225,6 +225,8 @@ EXTRA_DIST +=	bsd-vis.h
 if NEED_LIBASR
 EXTRA_DIST +=		libasr/asr_compat.h
 EXTRA_DIST +=		libasr/asr_private.h
+EXTRA_DIST +=		libasr/asr.h
+EXTRA_DIST +=		libasr/thread_private.h
 endif
 
 
diff --git a/openbsd-compat/err_h/err.h b/openbsd-compat/err_h/err.h
index a56b6188..92aa69f6 100644
--- a/openbsd-compat/err_h/err.h
+++ b/openbsd-compat/err_h/err.h
@@ -10,6 +10,9 @@ void err(int, const char *, ...);
 __attribute__ ((noreturn))
 void errx(int, const char *, ...);
 
+__attribute__ ((noreturn))
+void errc(int, int, const char *, ...);
+
 void warn(const char *, ...);
 void warnx(const char *, ...);
 
diff --git a/openbsd-compat/libasr/asr.c b/openbsd-compat/libasr/asr.c
index 90bc59b4..008544ad 100644
--- a/openbsd-compat/libasr/asr.c
+++ b/openbsd-compat/libasr/asr.c
@@ -150,6 +150,8 @@ asr_run(struct asr_query *as, struct asr_result *ar)
 {
 	int	r, saved_errno = errno;
 
+	memset(ar, 0, sizeof(*ar));
+
 	DPRINT("asr: asr_run(%p, %p) %s ctx=[%p]\n", as, ar,
 	    _asr_querystr(as->as_type), as->as_ctx);
 	r = as->as_run(as, ar);
diff --git a/openbsd-compat/openbsd-compat.h b/openbsd-compat/openbsd-compat.h
index 57748621..dcb643f1 100644
--- a/openbsd-compat/openbsd-compat.h
+++ b/openbsd-compat/openbsd-compat.h
@@ -96,7 +96,7 @@ const char *inet_ntop(int af, const void *src, char *dst, socklen_t size);
 char *strsep(char **stringp, const char *delim);
 #endif
 
-#ifndef HAVE_SETPROCTITLE
+#ifdef NEED_SETPROCTITLE
 void setproctitle(const char *fmt, ...);
 void compat_init_setproctitle(int argc, char *argv[]);
 #endif
@@ -334,6 +334,8 @@ const char *strerror(int);
 int usleep(unsigned int useconds);
 #endif
 
+int pipe2(int pipefd[2], int flags);
+
 char *get_progname(char *);
 
 
diff --git a/openbsd-compat/pipe2.c b/openbsd-compat/pipe2.c
index 710f8df2..fd5c3f49 100644
--- a/openbsd-compat/pipe2.c
+++ b/openbsd-compat/pipe2.c
@@ -1,5 +1,6 @@
 /*
  * Copyright (c) 2020 Gilles Chehade <gilles@poolp.org>
+ * Copyright (C) 2020 Jason A. Donenfeld <Jason@zx2c4.com>. All Rights Reserved.
  *
  * Permission to use, copy, modify, and distribute this software for any
  * purpose with or without fee is hereby granted, provided that the above
@@ -25,12 +26,21 @@ pipe2(int pipefd[2], int flags)
 	if (pipe(pipefd) == -1)
 		return -1;
 
-	if (fcntl(pipefd[0], F_SETFL, FD_CLOEXEC) == -1 ||
-		fcntl(pipefd[1], F_SETFL, FD_CLOEXEC) == -1) {
-			close(pipefd[0]);
-			close(pipefd[1]);
-			return -1;
-		}
+	if ((flags & O_NONBLOCK) &&
+	    (fcntl(pipefd[0], F_SETFL, O_NONBLOCK) == -1 ||
+	     fcntl(pipefd[1], F_SETFL, O_NONBLOCK) == -1)) {
+		close(pipefd[0]);
+		close(pipefd[1]);
+		return -1;
+	}
+
+	if ((flags & O_CLOEXEC) &&
+	    (fcntl(pipefd[0], F_SETFD, FD_CLOEXEC) == -1 ||
+	     fcntl(pipefd[1], F_SETFD, FD_CLOEXEC) == -1)) {
+		close(pipefd[0]);
+		close(pipefd[1]);
+		return -1;
+	}
 
 	return 0;
 }
diff --git a/openbsd-compat/setproctitle.c b/openbsd-compat/setproctitle.c
index eef70c14..71e1595e 100644
--- a/openbsd-compat/setproctitle.c
+++ b/openbsd-compat/setproctitle.c
@@ -68,8 +68,7 @@ static size_t argv_env_len = 0;
 void
 compat_init_setproctitle(int argc, char *argv[])
 {
-#if !defined(HAVE_SETPROCTITLE) && \
-    defined(SPT_TYPE) && SPT_TYPE == SPT_REUSEARGV
+#if defined(SPT_TYPE) && SPT_TYPE == SPT_REUSEARGV
 	extern char **environ;
 	char *lastargv = NULL;
 	char **envp = environ;
@@ -156,8 +155,6 @@ setproctitle(const char *fmt, ...)
 	pst.pst_command = ptitle;
 	pstat(PSTAT_SETCMD, pst, strlen(ptitle), 0, 0);
 #elif SPT_TYPE == SPT_REUSEARGV
-/*	debug("setproctitle: copy \"%s\" into len %d", 
-	    buf, argv_env_len); */
 	len = strlcpy(argv_start, ptitle, argv_env_len);
 	for(; len < argv_env_len; len++)
 		argv_start[len] = SPT_PADCHAR;
diff --git a/smtpd/Makefile b/usr.sbin/smtpd/Makefile
similarity index 100%
rename from smtpd/Makefile
rename to usr.sbin/smtpd/Makefile
diff --git a/smtpd/aliases.5 b/usr.sbin/smtpd/aliases.5
similarity index 100%
rename from smtpd/aliases.5
rename to usr.sbin/smtpd/aliases.5
diff --git a/smtpd/aliases.c b/usr.sbin/smtpd/aliases.c
similarity index 100%
rename from smtpd/aliases.c
rename to usr.sbin/smtpd/aliases.c
diff --git a/smtpd/bounce.c b/usr.sbin/smtpd/bounce.c
similarity index 100%
rename from smtpd/bounce.c
rename to usr.sbin/smtpd/bounce.c
diff --git a/smtpd/ca.c b/usr.sbin/smtpd/ca.c
similarity index 80%
rename from smtpd/ca.c
rename to usr.sbin/smtpd/ca.c
index a27db87a..a8862cdc 100644
--- a/smtpd/ca.c
+++ b/usr.sbin/smtpd/ca.c
@@ -65,13 +65,11 @@ static int	 rsae_init(RSA *);
 static int	 rsae_finish(RSA *);
 static int	 rsae_keygen(RSA *, int, BIGNUM *, BN_GENCB *);
 
-#if defined(SUPPORT_ECDSA)
 static ECDSA_SIG *ecdsae_do_sign(const unsigned char *, int, const BIGNUM *,
     const BIGNUM *, EC_KEY *);
 static int ecdsae_sign_setup(EC_KEY *, BN_CTX *, BIGNUM **, BIGNUM **);
 static int ecdsae_do_verify(const unsigned char *, int, const ECDSA_SIG *,
     EC_KEY *);
-#endif
 
 static uint64_t	 reqid = 0;
 
@@ -230,17 +228,13 @@ void
 ca_imsg(struct mproc *p, struct imsg *imsg)
 {
 	RSA			*rsa = NULL;
-#if defined(SUPPORT_ECDSA)
 	EC_KEY			*ecdsa = NULL;
-#endif
 	const void		*from = NULL;
 	unsigned char		*to = NULL;
 	struct msg		 m;
 	const char		*pkiname;
 	size_t			 flen, tlen, padding;
-#if defined(SUPPORT_ECDSA)
 	int			 buf_len;
-#endif
 	struct pki		*pki;
 	int			 ret = 0;
 	uint64_t		 id;
@@ -313,7 +307,6 @@ ca_imsg(struct mproc *p, struct imsg *imsg)
 		RSA_free(rsa);
 		return;
 
-#if defined(SUPPORT_ECDSA)
 	case IMSG_CA_ECDSA_SIGN:
 		m_msg(&m, imsg);
 		m_get_id(&m, &id);
@@ -329,6 +322,7 @@ ca_imsg(struct mproc *p, struct imsg *imsg)
 		buf_len = ECDSA_size(ecdsa);
 		if ((to = calloc(1, buf_len)) == NULL)
 			fatalx("ca_imsg: calloc");
+
 		ret = ECDSA_sign(0, from, flen, to, &buf_len, ecdsa);
 		m_create(p, imsg->hdr.type, 0, 0, -1);
 		m_add_id(p, id);
@@ -339,7 +333,6 @@ ca_imsg(struct mproc *p, struct imsg *imsg)
 		free(to);
 		EC_KEY_free(ecdsa);
 		return;
-#endif
 	}
 	errx(1, "ca_imsg: unexpected %s imsg", imsg_to_str(imsg->hdr.type));
 }
@@ -510,15 +503,11 @@ rsae_keygen(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)
 }
 
 
-#if defined(SUPPORT_ECDSA)
 /*
  * ECDSA privsep engine (called from unprivileged processes)
  */
 
-const ECDSA_METHOD *ecdsa_default = NULL;
-
-static ECDSA_METHOD *ecdsae_method = NULL;
-
+#if defined(SUPPORT_ECDSA)
 ECDSA_METHOD *
 ECDSA_METHOD_new_temporary(const char *name, int);
 
@@ -538,6 +527,11 @@ ECDSA_METHOD_new_temporary(const char *name, int flags)
 	ecdsa->flags = flags;
 	return ecdsa;
 }
+#else
+const EC_KEY_METHOD *ecdsa_default = NULL;
+
+static EC_KEY_METHOD *ecdsae_method = NULL;
+#endif
 
 static ECDSA_SIG *
 ecdsae_send_enc_imsg(const unsigned char *dgst, int dgst_len,
@@ -554,8 +548,13 @@ ecdsae_send_enc_imsg(const unsigned char *dgst, int dgst_len,
 	uint64_t	 id;
 	ECDSA_SIG	*sig = NULL;
 
+#if defined(SUPPORT_ECDSA)
 	if ((pkiname = ECDSA_get_ex_data(eckey, 0)) == NULL)
 		return (0);
+#else
+	if ((pkiname = EC_KEY_get_ex_data(eckey, 0)) == NULL)
+		return (0);
+#endif
 
 	/*
 	 * Send a synchronous imsg because we cannot defer the ECDSA
@@ -613,6 +612,7 @@ ecdsae_send_enc_imsg(const unsigned char *dgst, int dgst_len,
 	return (sig);
 }
 
+#if defined(SUPPORT_ECDSA)
 ECDSA_SIG *
 ecdsae_do_sign(const unsigned char *dgst, int dgst_len,
     const BIGNUM *inv, const BIGNUM *rp, EC_KEY *eckey)
@@ -621,6 +621,7 @@ ecdsae_do_sign(const unsigned char *dgst, int dgst_len,
 	if (ECDSA_get_ex_data(eckey, 0) != NULL)
 		return (ecdsae_send_enc_imsg(dgst, dgst_len, inv, rp, eckey));
 	return (ecdsa_default->ecdsa_do_sign(dgst, dgst_len, inv, rp, eckey));
+
 }
 
 int
@@ -638,6 +639,114 @@ ecdsae_do_verify(const unsigned char *dgst, int dgst_len,
 	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
 	return (ecdsa_default->ecdsa_do_verify(dgst, dgst_len, sig, eckey));
 }
+#else
+int
+ecdsae_keygen(EC_KEY *eckey)
+{
+	int (*keygen)(EC_KEY *key);
+	EC_KEY_METHOD_get_keygen(ecdsa_default,
+		&keygen);
+	return keygen(eckey);
+}
+
+int
+ecdsae_compute_key(unsigned char **psec, size_t *pseclen,
+	const EC_POINT *pub_key, const EC_KEY *ecdh)
+{
+	int (*ckey)(unsigned char **psec,
+		size_t *pseclen,
+		const EC_POINT *pub_key,
+		const EC_KEY *ecdh);
+	EC_KEY_METHOD_get_compute_key(ecdsa_default,
+		&ckey);
+	return ckey(psec, pseclen, pub_key, ecdh);
+}
+
+int
+ecdsae_sign(int type, const unsigned char *dgst, int dlen, unsigned char *sig,
+    unsigned int *siglen, const BIGNUM *kinv, const BIGNUM *r, EC_KEY *eckey)
+{
+	int (*sign)(int type, const unsigned char *dgst,
+	    int dlen, unsigned char *sig,
+	    unsigned int *siglen,
+	    const BIGNUM *kinv, const BIGNUM *r,
+	    EC_KEY *eckey);
+
+	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
+	EC_KEY_METHOD_get_sign(ecdsa_default,
+	    &sign,
+	    NULL,
+	    NULL);
+	return (sign(type, dgst, dlen, sig, siglen, kinv, r, eckey));
+}
+	
+
+ECDSA_SIG *
+ecdsae_do_sign(const unsigned char *dgst, int dgst_len,
+    const BIGNUM *inv, const BIGNUM *rp, EC_KEY *eckey)
+{
+	ECDSA_SIG *(*psign_sig)(const unsigned char *dgst,
+	    int dgst_len,
+	    const BIGNUM *in_kinv,
+	    const BIGNUM *in_r,
+	    EC_KEY *eckey);
+
+	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
+	if (EC_KEY_get_ex_data(eckey, 0) != NULL)
+		return (ecdsae_send_enc_imsg(dgst, dgst_len, inv, rp, eckey));
+	EC_KEY_METHOD_get_sign(ecdsa_default,
+	    NULL,
+	    NULL,
+	    &psign_sig);
+	return (psign_sig(dgst, dgst_len, inv, rp, eckey));
+}
+
+int
+ecdsae_sign_setup(EC_KEY *eckey, BN_CTX *ctx, BIGNUM **kinv,
+    BIGNUM **r)
+{
+	int (*psign_setup)(EC_KEY *eckey, BN_CTX *ctx_in,
+	    BIGNUM **kinvp, BIGNUM **rp);
+
+	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
+	EC_KEY_METHOD_get_sign(ecdsa_default,
+	    NULL,
+	    &psign_setup,
+	    NULL);
+	return (psign_setup(eckey, ctx, kinv, r));
+}
+
+int
+ecdsae_verify(int type, const unsigned char *dgst, int dgst_len,
+    const unsigned char *sigbuf, int sig_len, EC_KEY *eckey)
+{
+	int (*verify)(int type, const unsigned
+	    char *dgst, int dgst_len,
+	    const unsigned char *sigbuf,
+	    int sig_len, EC_KEY *eckey);
+
+	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
+	EC_KEY_METHOD_get_verify(ecdsa_default,
+	    &verify,
+	    NULL);
+	return (verify(type, dgst, dgst_len, sigbuf, sig_len, eckey));
+}
+
+int
+ecdsae_do_verify(const unsigned char *dgst, int dgst_len,
+    const ECDSA_SIG *sig, EC_KEY *eckey)
+{
+	int (*pverify_sig)(const unsigned char *dgst,
+	    int dgst_len,
+	    const ECDSA_SIG *sig,
+	    EC_KEY *eckey);
+
+	log_debug("debug: %s: %s", proc_name(smtpd_process), __func__);
+	EC_KEY_METHOD_get_verify(ecdsa_default,
+	    NULL,
+	    &pverify_sig);
+	return (pverify_sig(dgst, dgst_len, sig, eckey));
+}
 #endif
 
 static void
@@ -765,13 +874,66 @@ ecdsa_engine_init(void)
 	ssl_error(errstr);
 	fatalx("%s", errstr);
 }
+#else
+static void
+ecdsa_engine_init(void)
+{
+	ENGINE		*e;
+	const char	*errstr, *name;
+
+	if ((ecdsae_method = EC_KEY_METHOD_new(NULL)) == NULL) {
+		errstr = "EC_KEY_new";
+		goto fail;
+	}
+
+	EC_KEY_METHOD_set_keygen(ecdsae_method, ecdsae_keygen);
+	EC_KEY_METHOD_set_compute_key(ecdsae_method, ecdsae_compute_key);
+	EC_KEY_METHOD_set_sign(ecdsae_method, ecdsae_sign, ecdsae_sign_setup,
+	    ecdsae_do_sign);
+	EC_KEY_METHOD_set_verify(ecdsae_method, ecdsae_verify, ecdsae_do_verify);
+
+	if ((e = ENGINE_get_default_EC()) == NULL) {
+		if ((e = ENGINE_new()) == NULL) {
+			errstr = "ENGINE_new";
+			goto fail;
+		}
+		if (!ENGINE_set_name(e, "ECDSA privsep engine")) {
+			errstr = "ENGINE_set_name";
+			goto fail;
+		}
+		if ((ecdsa_default = EC_KEY_get_default_method()) == NULL) {
+			errstr = "EC_KEY_get_default_method";
+			goto fail;
+		}
+	} else if ((ecdsa_default = ENGINE_get_EC(e)) == NULL) {
+		errstr = "ENGINE_get_EC";
+		goto fail;
+	}
+
+	if ((name = ENGINE_get_name(e)) == NULL)
+		name = "unknown ECDSA engine";
+	
+	log_debug("debug: %s: using %s", __func__, name);
+
+	if (!ENGINE_set_EC(e, ecdsae_method)) {
+		errstr = "ENGINE_set_EC";
+		goto fail;
+	}
+	if (!ENGINE_set_default_EC(e)) {
+		errstr = "ENGINE_set_default_EC";
+		goto fail;
+	}
+	return;
+
+ fail:
+	ssl_error(errstr);
+	fatalx("%s", errstr);
+}
 #endif
 
 void
 ca_engine_init(void)
 {
 	rsa_engine_init();
-#if defined(SUPPORT_ECDSA)
 	ecdsa_engine_init();
-#endif
 }
diff --git a/smtpd/cert.c b/usr.sbin/smtpd/cert.c
similarity index 100%
rename from smtpd/cert.c
rename to usr.sbin/smtpd/cert.c
diff --git a/smtpd/compress_backend.c b/usr.sbin/smtpd/compress_backend.c
similarity index 100%
rename from smtpd/compress_backend.c
rename to usr.sbin/smtpd/compress_backend.c
diff --git a/smtpd/compress_gzip.c b/usr.sbin/smtpd/compress_gzip.c
similarity index 100%
rename from smtpd/compress_gzip.c
rename to usr.sbin/smtpd/compress_gzip.c
diff --git a/smtpd/config.c b/usr.sbin/smtpd/config.c
similarity index 100%
rename from smtpd/config.c
rename to usr.sbin/smtpd/config.c
diff --git a/smtpd/control.c b/usr.sbin/smtpd/control.c
similarity index 99%
rename from smtpd/control.c
rename to usr.sbin/smtpd/control.c
index 0e35bbd1..dbb2840d 100644
--- a/smtpd/control.c
+++ b/usr.sbin/smtpd/control.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: control.c,v 1.123 2018/05/31 21:06:12 gilles Exp $	*/
+/*	$OpenBSD: control.c,v 1.125 2020/09/23 19:11:50 martijn Exp $	*/
 
 /*
  * Copyright (c) 2012 Gilles Chehade <gilles@poolp.org>
diff --git a/smtpd/crypto.c b/usr.sbin/smtpd/crypto.c
similarity index 100%
rename from smtpd/crypto.c
rename to usr.sbin/smtpd/crypto.c
diff --git a/smtpd/dict.c b/usr.sbin/smtpd/dict.c
similarity index 100%
rename from smtpd/dict.c
rename to usr.sbin/smtpd/dict.c
diff --git a/smtpd/dict.h b/usr.sbin/smtpd/dict.h
similarity index 100%
rename from smtpd/dict.h
rename to usr.sbin/smtpd/dict.h
diff --git a/smtpd/dns.c b/usr.sbin/smtpd/dns.c
similarity index 100%
rename from smtpd/dns.c
rename to usr.sbin/smtpd/dns.c
diff --git a/smtpd/enqueue.c b/usr.sbin/smtpd/enqueue.c
similarity index 100%
rename from smtpd/enqueue.c
rename to usr.sbin/smtpd/enqueue.c
diff --git a/smtpd/envelope.c b/usr.sbin/smtpd/envelope.c
similarity index 100%
rename from smtpd/envelope.c
rename to usr.sbin/smtpd/envelope.c
diff --git a/smtpd/esc.c b/usr.sbin/smtpd/esc.c
similarity index 100%
rename from smtpd/esc.c
rename to usr.sbin/smtpd/esc.c
diff --git a/smtpd/expand.c b/usr.sbin/smtpd/expand.c
similarity index 100%
rename from smtpd/expand.c
rename to usr.sbin/smtpd/expand.c
diff --git a/smtpd/filter.c b/usr.sbin/smtpd/filter.c
similarity index 100%
rename from smtpd/filter.c
rename to usr.sbin/smtpd/filter.c
diff --git a/smtpd/forward.5 b/usr.sbin/smtpd/forward.5
similarity index 100%
rename from smtpd/forward.5
rename to usr.sbin/smtpd/forward.5
diff --git a/smtpd/forward.c b/usr.sbin/smtpd/forward.c
similarity index 100%
rename from smtpd/forward.c
rename to usr.sbin/smtpd/forward.c
diff --git a/smtpd/iobuf.c b/usr.sbin/smtpd/iobuf.c
similarity index 100%
rename from smtpd/iobuf.c
rename to usr.sbin/smtpd/iobuf.c
diff --git a/smtpd/iobuf.h b/usr.sbin/smtpd/iobuf.h
similarity index 100%
rename from smtpd/iobuf.h
rename to usr.sbin/smtpd/iobuf.h
diff --git a/smtpd/ioev.c b/usr.sbin/smtpd/ioev.c
similarity index 100%
rename from smtpd/ioev.c
rename to usr.sbin/smtpd/ioev.c
diff --git a/smtpd/ioev.h b/usr.sbin/smtpd/ioev.h
similarity index 100%
rename from smtpd/ioev.h
rename to usr.sbin/smtpd/ioev.h
diff --git a/smtpd/libressl.c b/usr.sbin/smtpd/libressl.c
similarity index 100%
rename from smtpd/libressl.c
rename to usr.sbin/smtpd/libressl.c
diff --git a/smtpd/limit.c b/usr.sbin/smtpd/limit.c
similarity index 100%
rename from smtpd/limit.c
rename to usr.sbin/smtpd/limit.c
diff --git a/smtpd/lka.c b/usr.sbin/smtpd/lka.c
similarity index 100%
rename from smtpd/lka.c
rename to usr.sbin/smtpd/lka.c
diff --git a/smtpd/lka_filter.c b/usr.sbin/smtpd/lka_filter.c
similarity index 99%
rename from smtpd/lka_filter.c
rename to usr.sbin/smtpd/lka_filter.c
index 2dc66057..7931ede4 100644
--- a/smtpd/lka_filter.c
+++ b/usr.sbin/smtpd/lka_filter.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: lka_filter.c,v 1.62 2020/04/24 11:34:07 eric Exp $	*/
+/*	$OpenBSD: lka_filter.c,v 1.63 2020/09/16 11:19:42 martijn Exp $	*/
 
 /*
  * Copyright (c) 2018 Gilles Chehade <gilles@poolp.org>
@@ -212,6 +212,8 @@ lka_proc_config(struct processor_instance *pi)
 		io_printf(pi->io, "config|subsystem|smtp-in\n");
 	if (pi->subsystems & FILTER_SUBSYSTEM_SMTP_OUT)
 		io_printf(pi->io, "config|subsystem|smtp-out\n");
+	io_printf(pi->io, "config|admd|%s\n",
+	    env->sc_admd != NULL ? env->sc_admd : env->sc_hostname);
 	io_printf(pi->io, "config|ready\n");
 }
 
diff --git a/smtpd/lka_session.c b/usr.sbin/smtpd/lka_session.c
similarity index 100%
rename from smtpd/lka_session.c
rename to usr.sbin/smtpd/lka_session.c
diff --git a/smtpd/log.c b/usr.sbin/smtpd/log.c
similarity index 100%
rename from smtpd/log.c
rename to usr.sbin/smtpd/log.c
diff --git a/smtpd/log.h b/usr.sbin/smtpd/log.h
similarity index 100%
rename from smtpd/log.h
rename to usr.sbin/smtpd/log.h
diff --git a/smtpd/mail.lmtp.8 b/usr.sbin/smtpd/mail.lmtp.8
similarity index 100%
rename from smtpd/mail.lmtp.8
rename to usr.sbin/smtpd/mail.lmtp.8
diff --git a/smtpd/mail.lmtp.c b/usr.sbin/smtpd/mail.lmtp.c
similarity index 100%
rename from smtpd/mail.lmtp.c
rename to usr.sbin/smtpd/mail.lmtp.c
diff --git a/smtpd/mail.maildir.8 b/usr.sbin/smtpd/mail.maildir.8
similarity index 100%
rename from smtpd/mail.maildir.8
rename to usr.sbin/smtpd/mail.maildir.8
diff --git a/smtpd/mail.maildir.c b/usr.sbin/smtpd/mail.maildir.c
similarity index 100%
rename from smtpd/mail.maildir.c
rename to usr.sbin/smtpd/mail.maildir.c
diff --git a/smtpd/mail.mboxfile.8 b/usr.sbin/smtpd/mail.mboxfile.8
similarity index 100%
rename from smtpd/mail.mboxfile.8
rename to usr.sbin/smtpd/mail.mboxfile.8
diff --git a/smtpd/mail.mboxfile.c b/usr.sbin/smtpd/mail.mboxfile.c
similarity index 100%
rename from smtpd/mail.mboxfile.c
rename to usr.sbin/smtpd/mail.mboxfile.c
diff --git a/smtpd/mail.mda.8 b/usr.sbin/smtpd/mail.mda.8
similarity index 100%
rename from smtpd/mail.mda.8
rename to usr.sbin/smtpd/mail.mda.8
diff --git a/smtpd/mail.mda.c b/usr.sbin/smtpd/mail.mda.c
similarity index 100%
rename from smtpd/mail.mda.c
rename to usr.sbin/smtpd/mail.mda.c
diff --git a/smtpd/mail/Makefile b/usr.sbin/smtpd/mail/Makefile
similarity index 100%
rename from smtpd/mail/Makefile
rename to usr.sbin/smtpd/mail/Makefile
diff --git a/smtpd/mailaddr.c b/usr.sbin/smtpd/mailaddr.c
similarity index 91%
rename from smtpd/mailaddr.c
rename to usr.sbin/smtpd/mailaddr.c
index 4346e3dc..0965aea8 100644
--- a/smtpd/mailaddr.c
+++ b/usr.sbin/smtpd/mailaddr.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: mailaddr.c,v 1.3 2018/05/31 21:06:12 gilles Exp $	*/
+/*	$OpenBSD: mailaddr.c,v 1.4 2020/09/22 18:04:27 martijn Exp $	*/
 
 /*
  * Copyright (c) 2015 Gilles Chehade <gilles@poolp.org>
@@ -82,12 +82,10 @@ int
 mailaddr_line(struct maddrmap *maddrmap, const char *s)
 {
 	struct maddrnode	mn;
-	char			buffer[LINE_MAX];
-	char		       *p, *subrcpt;
+	char		       *p, *subrcpt, *buffer;
 	int			ret;
 
-	memset(buffer, 0, sizeof buffer);
-	if (strlcpy(buffer, s, sizeof buffer) >= sizeof buffer)
+	if ((buffer = strdup(s)) == NULL)
 		return 0;
 
 	p = buffer;
@@ -95,12 +93,16 @@ mailaddr_line(struct maddrmap *maddrmap, const char *s)
 		subrcpt = strip(subrcpt);
 		if (subrcpt[0] == '\0')
 			continue;
-		if (!text_to_mailaddr(&mn.mailaddr, subrcpt))
+		if (!text_to_mailaddr(&mn.mailaddr, subrcpt)) {
+			free(buffer);
 			return 0;
+		}
 		log_debug("subrcpt: [%s]", subrcpt);
 		maddrmap_insert(maddrmap, &mn);
 	}
 
+	free(buffer);
+
 	if (ret >= 0)
 		return 1;
 	/* expand_line_split() returned < 0 */
diff --git a/smtpd/makemap.8 b/usr.sbin/smtpd/makemap.8
similarity index 100%
rename from smtpd/makemap.8
rename to usr.sbin/smtpd/makemap.8
diff --git a/smtpd/makemap.c b/usr.sbin/smtpd/makemap.c
similarity index 100%
rename from smtpd/makemap.c
rename to usr.sbin/smtpd/makemap.c
diff --git a/smtpd/mda.c b/usr.sbin/smtpd/mda.c
similarity index 100%
rename from smtpd/mda.c
rename to usr.sbin/smtpd/mda.c
diff --git a/smtpd/mda_mbox.c b/usr.sbin/smtpd/mda_mbox.c
similarity index 100%
rename from smtpd/mda_mbox.c
rename to usr.sbin/smtpd/mda_mbox.c
diff --git a/smtpd/mda_unpriv.c b/usr.sbin/smtpd/mda_unpriv.c
similarity index 100%
rename from smtpd/mda_unpriv.c
rename to usr.sbin/smtpd/mda_unpriv.c
diff --git a/smtpd/mda_variables.c b/usr.sbin/smtpd/mda_variables.c
similarity index 100%
rename from smtpd/mda_variables.c
rename to usr.sbin/smtpd/mda_variables.c
diff --git a/smtpd/mproc.c b/usr.sbin/smtpd/mproc.c
similarity index 100%
rename from smtpd/mproc.c
rename to usr.sbin/smtpd/mproc.c
diff --git a/smtpd/mta.c b/usr.sbin/smtpd/mta.c
similarity index 100%
rename from smtpd/mta.c
rename to usr.sbin/smtpd/mta.c
diff --git a/smtpd/mta_session.c b/usr.sbin/smtpd/mta_session.c
similarity index 100%
rename from smtpd/mta_session.c
rename to usr.sbin/smtpd/mta_session.c
diff --git a/smtpd/newaliases.8 b/usr.sbin/smtpd/newaliases.8
similarity index 100%
rename from smtpd/newaliases.8
rename to usr.sbin/smtpd/newaliases.8
diff --git a/smtpd/parse.y b/usr.sbin/smtpd/parse.y
similarity index 99%
rename from smtpd/parse.y
rename to usr.sbin/smtpd/parse.y
index db5be747..a82f8206 100644
--- a/smtpd/parse.y
+++ b/usr.sbin/smtpd/parse.y
@@ -1,4 +1,4 @@
-/*	$OpenBSD: parse.y,v 1.277 2020/02/24 23:54:27 millert Exp $	*/
+/*	$OpenBSD: parse.y,v 1.281 2020/09/23 19:11:50 martijn Exp $	*/
 
 /*
  * Copyright (c) 2008 Gilles Chehade <gilles@poolp.org>
@@ -179,7 +179,7 @@ typedef struct {
 
 %}
 
-%token	ACTION ALIAS ANY ARROW AUTH AUTH_OPTIONAL
+%token	ACTION ADMD ALIAS ANY ARROW AUTH AUTH_OPTIONAL
 %token	BACKUP BOUNCE BYPASS
 %token	CA CERT CHAIN CHROOT CIPHERS COMMIT COMPRESSION CONNECT
 %token	DATA DATA_LINE DHE DISCONNECT DOMAIN
@@ -215,6 +215,7 @@ grammar		: /* empty */
 		| grammar include '\n'
 		| grammar varset '\n'
 		| grammar bounce '\n'
+		| grammar admd '\n'
 		| grammar ca '\n'
 		| grammar mda '\n'
 		| grammar mta '\n'
@@ -316,6 +317,21 @@ BOUNCE WARN_INTERVAL {
 ;
 
 
+admd:
+ADMD STRING {
+	size_t i;
+
+	for (i = 0; $2[i] != '\0'; i++) {
+		if (!isprint($2[i])) {
+			yyerror("not a valid admd");
+			free($2);
+			YYERROR;
+		}
+	}
+	conf->sc_admd = $2;
+};
+
+
 ca:
 CA STRING {
 	char buf[HOST_NAME_MAX+1];
@@ -2607,6 +2623,7 @@ lookup(char *s)
 	/* this has to be sorted always */
 	static const struct keywords keywords[] = {
 		{ "action",		ACTION },
+		{ "admd",		ADMD },
 		{ "alias",		ALIAS },
 		{ "any",		ANY },
 		{ "auth",		AUTH },
diff --git a/smtpd/parser.c b/usr.sbin/smtpd/parser.c
similarity index 100%
rename from smtpd/parser.c
rename to usr.sbin/smtpd/parser.c
diff --git a/smtpd/parser.h b/usr.sbin/smtpd/parser.h
similarity index 100%
rename from smtpd/parser.h
rename to usr.sbin/smtpd/parser.h
diff --git a/smtpd/pony.c b/usr.sbin/smtpd/pony.c
similarity index 100%
rename from smtpd/pony.c
rename to usr.sbin/smtpd/pony.c
diff --git a/smtpd/proxy.c b/usr.sbin/smtpd/proxy.c
similarity index 100%
rename from smtpd/proxy.c
rename to usr.sbin/smtpd/proxy.c
diff --git a/smtpd/queue.c b/usr.sbin/smtpd/queue.c
similarity index 100%
rename from smtpd/queue.c
rename to usr.sbin/smtpd/queue.c
diff --git a/smtpd/queue_backend.c b/usr.sbin/smtpd/queue_backend.c
similarity index 100%
rename from smtpd/queue_backend.c
rename to usr.sbin/smtpd/queue_backend.c
diff --git a/smtpd/queue_fs.c b/usr.sbin/smtpd/queue_fs.c
similarity index 100%
rename from smtpd/queue_fs.c
rename to usr.sbin/smtpd/queue_fs.c
diff --git a/smtpd/queue_null.c b/usr.sbin/smtpd/queue_null.c
similarity index 100%
rename from smtpd/queue_null.c
rename to usr.sbin/smtpd/queue_null.c
diff --git a/smtpd/queue_proc.c b/usr.sbin/smtpd/queue_proc.c
similarity index 100%
rename from smtpd/queue_proc.c
rename to usr.sbin/smtpd/queue_proc.c
diff --git a/smtpd/queue_ram.c b/usr.sbin/smtpd/queue_ram.c
similarity index 100%
rename from smtpd/queue_ram.c
rename to usr.sbin/smtpd/queue_ram.c
diff --git a/smtpd/report_smtp.c b/usr.sbin/smtpd/report_smtp.c
similarity index 100%
rename from smtpd/report_smtp.c
rename to usr.sbin/smtpd/report_smtp.c
diff --git a/smtpd/resolver.c b/usr.sbin/smtpd/resolver.c
similarity index 100%
rename from smtpd/resolver.c
rename to usr.sbin/smtpd/resolver.c
diff --git a/smtpd/rfc5322.c b/usr.sbin/smtpd/rfc5322.c
similarity index 100%
rename from smtpd/rfc5322.c
rename to usr.sbin/smtpd/rfc5322.c
diff --git a/smtpd/rfc5322.h b/usr.sbin/smtpd/rfc5322.h
similarity index 100%
rename from smtpd/rfc5322.h
rename to usr.sbin/smtpd/rfc5322.h
diff --git a/smtpd/ruleset.c b/usr.sbin/smtpd/ruleset.c
similarity index 100%
rename from smtpd/ruleset.c
rename to usr.sbin/smtpd/ruleset.c
diff --git a/smtpd/runq.c b/usr.sbin/smtpd/runq.c
similarity index 100%
rename from smtpd/runq.c
rename to usr.sbin/smtpd/runq.c
diff --git a/smtpd/scheduler.c b/usr.sbin/smtpd/scheduler.c
similarity index 100%
rename from smtpd/scheduler.c
rename to usr.sbin/smtpd/scheduler.c
diff --git a/smtpd/scheduler_backend.c b/usr.sbin/smtpd/scheduler_backend.c
similarity index 100%
rename from smtpd/scheduler_backend.c
rename to usr.sbin/smtpd/scheduler_backend.c
diff --git a/smtpd/scheduler_null.c b/usr.sbin/smtpd/scheduler_null.c
similarity index 100%
rename from smtpd/scheduler_null.c
rename to usr.sbin/smtpd/scheduler_null.c
diff --git a/smtpd/scheduler_proc.c b/usr.sbin/smtpd/scheduler_proc.c
similarity index 100%
rename from smtpd/scheduler_proc.c
rename to usr.sbin/smtpd/scheduler_proc.c
diff --git a/smtpd/scheduler_ramqueue.c b/usr.sbin/smtpd/scheduler_ramqueue.c
similarity index 100%
rename from smtpd/scheduler_ramqueue.c
rename to usr.sbin/smtpd/scheduler_ramqueue.c
diff --git a/smtpd/sendmail.8 b/usr.sbin/smtpd/sendmail.8
similarity index 100%
rename from smtpd/sendmail.8
rename to usr.sbin/smtpd/sendmail.8
diff --git a/smtpd/smtp.1 b/usr.sbin/smtpd/smtp.1
similarity index 100%
rename from smtpd/smtp.1
rename to usr.sbin/smtpd/smtp.1
diff --git a/smtpd/smtp.c b/usr.sbin/smtpd/smtp.c
similarity index 100%
rename from smtpd/smtp.c
rename to usr.sbin/smtpd/smtp.c
diff --git a/smtpd/smtp.h b/usr.sbin/smtpd/smtp.h
similarity index 100%
rename from smtpd/smtp.h
rename to usr.sbin/smtpd/smtp.h
diff --git a/smtpd/smtp/Makefile b/usr.sbin/smtpd/smtp/Makefile
similarity index 100%
rename from smtpd/smtp/Makefile
rename to usr.sbin/smtpd/smtp/Makefile
diff --git a/smtpd/smtp_client.c b/usr.sbin/smtpd/smtp_client.c
similarity index 100%
rename from smtpd/smtp_client.c
rename to usr.sbin/smtpd/smtp_client.c
diff --git a/smtpd/smtp_session.c b/usr.sbin/smtpd/smtp_session.c
similarity index 99%
rename from smtpd/smtp_session.c
rename to usr.sbin/smtpd/smtp_session.c
index aefce155..c103fa19 100644
--- a/smtpd/smtp_session.c
+++ b/usr.sbin/smtpd/smtp_session.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: smtp_session.c,v 1.426 2020/04/24 11:34:07 eric Exp $	*/
+/*	$OpenBSD: smtp_session.c,v 1.427 2020/11/20 20:37:56 jung Exp $	*/
 
 /*
  * Copyright (c) 2008 Gilles Chehade <gilles@poolp.org>
@@ -2593,7 +2593,8 @@ smtp_tx_rcpt_to(struct smtp_tx *tx, const char *line)
 
 			if (!text_to_mailaddr(&tx->evp.dsn_orcpt, opt) ||
 			    !valid_localpart(tx->evp.dsn_orcpt.user) ||
-			    !valid_domainpart(tx->evp.dsn_orcpt.domain)) {
+			    (strlen(tx->evp.dsn_orcpt.domain) != 0 &&
+			     !valid_domainpart(tx->evp.dsn_orcpt.domain))) {
 				smtp_reply(tx->session,
 				    "553 ORCPT address syntax error");
 				return;
diff --git a/smtpd/smtpc.c b/usr.sbin/smtpd/smtpc.c
similarity index 99%
rename from smtpd/smtpc.c
rename to usr.sbin/smtpd/smtpc.c
index 59479703..c0f5d992 100644
--- a/smtpd/smtpc.c
+++ b/usr.sbin/smtpd/smtpc.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: smtpc.c,v 1.10 2019/09/21 09:04:08 semarie Exp $	*/
+/*	$OpenBSD: smtpc.c,v 1.11 2020/09/14 18:32:11 millert Exp $	*/
 
 /*
  * Copyright (c) 2018 Eric Faurot <eric@openbsd.org>
@@ -193,7 +193,7 @@ parse_server(char *server)
 		*p = '\0';
 		p += 3;
 		/* check for credentials */
-		c = strchr(p, '@');
+		c = strrchr(p, '@');
 		if (c) {
 			creds = p;
 			*c = '\0';
diff --git a/smtpd/smtpctl.8 b/usr.sbin/smtpd/smtpctl.8
similarity index 96%
rename from smtpd/smtpctl.8
rename to usr.sbin/smtpd/smtpctl.8
index 1efcff63..b29f2063 100644
--- a/smtpd/smtpctl.8
+++ b/usr.sbin/smtpd/smtpctl.8
@@ -1,4 +1,4 @@
-.\" $OpenBSD: smtpctl.8,v 1.64 2018/09/18 06:21:45 miko Exp $
+.\" $OpenBSD: smtpctl.8,v 1.65 2020/09/14 09:48:08 martijn Exp $
 .\"
 .\" Copyright (c) 2006 Pierre-Yves Ritschard <pyr@openbsd.org>
 .\" Copyright (c) 2012 Gilles Chehade <gilles@poolp.org>
@@ -15,7 +15,7 @@
 .\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 .\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 .\"
-.Dd $Mdocdate: September 18 2018 $
+.Dd $Mdocdate: September 14 2020 $
 .Dt SMTPCTL 8
 .Os
 .Sh NAME
@@ -247,8 +247,13 @@ Shows if MTA, MDA and SMTP systems are currently running or paused.
 Recursively look up SPF records for the domains read from stdin.
 For example:
 .Bd -literal -offset indent
-# smtpctl spf walk < domains.txt
+$ smtpctl spf walk < domains.txt
 .Ed
+.Pp
+SPF records may contain macros which cannot be included in a static list and
+must be resolved dynamically at connection time.
+.Cm spf walk
+cannot provide full results in these cases.
 .It Cm trace Ar subsystem
 Enables real-time tracing of
 .Ar subsystem .
diff --git a/smtpd/smtpctl.c b/usr.sbin/smtpd/smtpctl.c
similarity index 99%
rename from smtpd/smtpctl.c
rename to usr.sbin/smtpd/smtpctl.c
index 7dba4224..1cc37994 100644
--- a/smtpd/smtpctl.c
+++ b/usr.sbin/smtpd/smtpctl.c
@@ -966,7 +966,7 @@ do_encrypt(int argc, struct parameter *argv)
 
 	if (argv)
 		p = argv[0].u.u_str;
-	execl(PATH_ENCRYPT, "encrypt", "--", p, (char *)NULL);
+	execl(PATH_ENCRYPT, "encrypt", p, (char *)NULL);
 	errx(1, "execl");
 }
 
@@ -1066,8 +1066,8 @@ main(int argc, char **argv)
 	int		 privileged;
 	char		*argv_mailq[] = { "show", "queue", NULL };
 
-#ifndef HAVE___PROGNAME
-	__progname = ssh_get_progname(argv[0]);
+#ifdef NEED_PROGNAME
+	__progname = get_progname(argv[0]);
 #endif
 
 	/* check that smtpctl was installed setgid */
diff --git a/smtpd/smtpctl/Makefile b/usr.sbin/smtpd/smtpctl/Makefile
similarity index 100%
rename from smtpd/smtpctl/Makefile
rename to usr.sbin/smtpd/smtpctl/Makefile
diff --git a/smtpd/smtpd-api.h b/usr.sbin/smtpd/smtpd-api.h
similarity index 100%
rename from smtpd/smtpd-api.h
rename to usr.sbin/smtpd/smtpd-api.h
diff --git a/smtpd/smtpd-defines.h b/usr.sbin/smtpd/smtpd-defines.h
similarity index 100%
rename from smtpd/smtpd-defines.h
rename to usr.sbin/smtpd/smtpd-defines.h
diff --git a/smtpd/smtpd-filters.7 b/usr.sbin/smtpd/smtpd-filters.7
similarity index 100%
rename from smtpd/smtpd-filters.7
rename to usr.sbin/smtpd/smtpd-filters.7
diff --git a/smtpd/smtpd.8 b/usr.sbin/smtpd/smtpd.8
similarity index 100%
rename from smtpd/smtpd.8
rename to usr.sbin/smtpd/smtpd.8
diff --git a/smtpd/smtpd.c b/usr.sbin/smtpd/smtpd.c
similarity index 99%
rename from smtpd/smtpd.c
rename to usr.sbin/smtpd/smtpd.c
index f18b1446..9307fc3b 100644
--- a/smtpd/smtpd.c
+++ b/usr.sbin/smtpd/smtpd.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: smtpd.c,v 1.333 2020/05/06 16:03:30 millert Exp $	*/
+/*	$OpenBSD: smtpd.c,v 1.335 2020/09/23 19:11:50 martijn Exp $	*/
 
 /*
  * Copyright (c) 2008 Gilles Chehade <gilles@poolp.org>
@@ -80,6 +80,7 @@
 #include <util.h>
 #endif
 
+#include <openssl/rand.h>
 #include <openssl/ssl.h>
 #include <openssl/evp.h>
 
@@ -519,11 +520,11 @@ main(int argc, char *argv[])
 	char		*rexec = NULL;
 	struct smtpd	*conf;
 
-#ifndef HAVE___PROGNAME
-	__progname = ssh_get_progname(argv[0]);
+#ifdef NEED_PROGNAME
+	__progname = get_progname(argv[0]);
 #endif
+	__progname = xstrdup(__progname);
 
-#ifndef HAVE_SETPROCTITLE
 	/* Save argv. Duplicate so setproctitle emulation doesn't clobber it */
 	saved_argc = argc;
 	saved_argv = xcalloc(argc + 1, sizeof(*saved_argv));
@@ -531,14 +532,15 @@ main(int argc, char *argv[])
 		saved_argv[i] = xstrdup(argv[i]);
 	saved_argv[i] = NULL;
 
+#ifdef NEED_SETPROCTITLE
 	/* Prepare for later setproctitle emulation */
 	compat_init_setproctitle(argc, argv);
 	argv = saved_argv;
+#endif
 
 	/* this is to work around GNU getopt + portable setproctitle() fuckery */
 	save_argc = saved_argc;
 	save_argv = saved_argv;
-#endif
 
 	if ((conf = config_default()) == NULL)
 		err(1, NULL);
diff --git a/smtpd/smtpd.conf b/usr.sbin/smtpd/smtpd.conf
similarity index 100%
rename from smtpd/smtpd.conf
rename to usr.sbin/smtpd/smtpd.conf
diff --git a/smtpd/smtpd.conf.5 b/usr.sbin/smtpd/smtpd.conf.5
similarity index 98%
rename from smtpd/smtpd.conf.5
rename to usr.sbin/smtpd/smtpd.conf.5
index c543c662..36207c39 100644
--- a/smtpd/smtpd.conf.5
+++ b/usr.sbin/smtpd/smtpd.conf.5
@@ -1,4 +1,4 @@
-.\"	$OpenBSD: smtpd.conf.5,v 1.250 2020/04/25 09:20:38 eric Exp $
+.\"	$OpenBSD: smtpd.conf.5,v 1.255 2020/09/23 19:11:50 martijn Exp $
 .\"
 .\" Copyright (c) 2008 Janne Johansson <jj@openbsd.org>
 .\" Copyright (c) 2009 Jacek Masiulaniec <jacekm@dobremiasto.net>
@@ -17,7 +17,7 @@
 .\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 .\"
 .\"
-.Dd $Mdocdate: April 25 2020 $
+.Dd $Mdocdate: September 23 2020 $
 .Dt SMTPD.CONF 5
 .Os
 .Sh NAME
@@ -280,6 +280,14 @@ and
 .Dq smtps
 protocols for authentication.
 Server certificates for those protocols are verified by default.
+.It Cm pki Ar pkiname
+For secure connections,
+use the certificate associated with
+.Ar pkiname
+(declared in a
+.Ic pki
+directive)
+to prove the client's identity to the remote mail server.
 .It Cm srs
 When relaying a mail resulting from a forward,
 use the Sender Rewriting Scheme to rewrite sender address.
@@ -313,6 +321,11 @@ which is useful on machines with multiple interfaces.
 If the list contains more than one address, all of them are used
 in such a way that traffic is routed as efficiently as possible.
 .El
+.It Ic admd Ar authservid
+The Administrative Management Domain this mailserver belongs to.
+The authservid will be forwarded to filters using it to identify or mark
+authentication-results headers.
+If omitted it defaults to the server name.
 .It Ic bounce Cm warn-interval Ar delay Op , Ar delay ...
 Send warning messages to the envelope sender when temporary delivery
 failures cause a message to remain on the queue for longer than
@@ -604,7 +617,7 @@ Specify that session may originate from authenticated user or user list
 no matter the source IP address.
 .It Xo
 .Op Ic \&!
-.Cm from auth
+.Cm from auth regex
 .Ar user | Pf < Ar user Ns >
 .Xc
 Specify that session may originate from authenticated regex or regex list
diff --git a/smtpd/smtpd.h b/usr.sbin/smtpd/smtpd.h
similarity index 99%
rename from smtpd/smtpd.h
rename to usr.sbin/smtpd/smtpd.h
index dbde3d23..beb1d7b4 100644
--- a/smtpd/smtpd.h
+++ b/usr.sbin/smtpd/smtpd.h
@@ -1,4 +1,4 @@
-/*	$OpenBSD: smtpd.h,v 1.656 2020/04/08 07:30:44 eric Exp $	*/
+/*	$OpenBSD: smtpd.h,v 1.659 2020/09/23 19:11:50 martijn Exp $	*/
 
 /*
  * Copyright (c) 2008 Gilles Chehade <gilles@poolp.org>
@@ -73,7 +73,7 @@
 #ifndef SMTPD_NAME
 #define	SMTPD_NAME		 "OpenSMTPD"
 #endif
-#define	SMTPD_VERSION		 "6.7.1p1"
+#define	SMTPD_VERSION		 "6.7.0-portable"
 #define SMTPD_SESSION_TIMEOUT	 300
 #define SMTPD_BACKLOG		 5
 
@@ -650,6 +650,8 @@ struct smtpd {
 	char				       *sc_srs_key;
 	char				       *sc_srs_key_backup;
 	int				        sc_srs_ttl;
+
+	char				       *sc_admd;
 };
 
 #define	TRACE_DEBUG	0x0001
diff --git a/smtpd/smtpd/Makefile b/usr.sbin/smtpd/smtpd/Makefile
similarity index 96%
rename from smtpd/smtpd/Makefile
rename to usr.sbin/smtpd/smtpd/Makefile
index 34a4dc74..858bfeda 100644
--- a/smtpd/smtpd/Makefile
+++ b/usr.sbin/smtpd/smtpd/Makefile
@@ -1,4 +1,4 @@
-#	$OpenBSD: Makefile,v 1.91 2018/06/03 14:04:06 gilles Exp $
+#	$OpenBSD: Makefile,v 1.109 2020/09/23 19:11:50 martijn Exp $
 
 .PATH:		${.CURDIR}/..
 
diff --git a/smtpd/spfwalk.c b/usr.sbin/smtpd/spfwalk.c
similarity index 95%
rename from smtpd/spfwalk.c
rename to usr.sbin/smtpd/spfwalk.c
index 0832d1bc..46bf3129 100644
--- a/smtpd/spfwalk.c
+++ b/usr.sbin/smtpd/spfwalk.c
@@ -58,7 +58,7 @@ static void	dispatch_txt(struct dns_rr *, struct target *);
 static void	dispatch_mx(struct dns_rr *, struct target *);
 static void	dispatch_a(struct dns_rr *, struct target *);
 static void	dispatch_aaaa(struct dns_rr *, struct target *);
-static void	lookup_record(int, const char *, struct target *);
+static void	lookup_record(int, char *, struct target *);
 static void	dispatch_record(struct asr_result *, void *);
 static ssize_t	parse_txt(const char *, size_t, char *, size_t);
 static int	parse_target(char *, struct target *);
@@ -120,11 +120,21 @@ spfwalk(int argc, struct parameter *argv)
 }
 
 void
-lookup_record(int type, const char *record, struct target *tgt)
+lookup_record(int type, char *record, struct target *tgt)
 {
 	struct asr_query *as;
 	struct target *ntgt;
+	size_t i;
 
+	if (strchr(record, '%') != NULL) {
+		for (i = 0; record[i] != '\0'; i++) {
+			if (!isprint(record[i]))
+				record[i] = '?';
+		}
+		warnx("%s: %s contains macros and can't be resolved", __func__,
+		    record);
+		return;
+	}
 	as = res_query_async(record, C_IN, type, NULL);
 	if (as == NULL)
 		err(1, "res_query_async");
diff --git a/smtpd/srs.c b/usr.sbin/smtpd/srs.c
similarity index 100%
rename from smtpd/srs.c
rename to usr.sbin/smtpd/srs.c
diff --git a/smtpd/ssl.c b/usr.sbin/smtpd/ssl.c
similarity index 99%
rename from smtpd/ssl.c
rename to usr.sbin/smtpd/ssl.c
index a37d6fea..97f7b1df 100644
--- a/smtpd/ssl.c
+++ b/usr.sbin/smtpd/ssl.c
@@ -400,11 +400,12 @@ ssl_load_pkey(const void *data, size_t datalen, char *buf, off_t len,
 #if defined(SUPPORT_ECDSA)
 		if (eckey)
 			ECDSA_set_ex_data(eckey, 0, exdata);
+#else
+		if (eckey)
+			EC_KEY_set_ex_data(eckey, 0, exdata);
 #endif
 		RSA_free(rsa); /* dereference, will be cleaned up with pkey */
-#if defined(SUPPORT_ECDSA)
 		EC_KEY_free(eckey); /* dereference, will be cleaned up with pkey */
-#endif
 	}
 
 	*x509ptr = x509;
diff --git a/smtpd/ssl.h b/usr.sbin/smtpd/ssl.h
similarity index 100%
rename from smtpd/ssl.h
rename to usr.sbin/smtpd/ssl.h
diff --git a/smtpd/ssl_smtpd.c b/usr.sbin/smtpd/ssl_smtpd.c
similarity index 100%
rename from smtpd/ssl_smtpd.c
rename to usr.sbin/smtpd/ssl_smtpd.c
diff --git a/smtpd/ssl_verify.c b/usr.sbin/smtpd/ssl_verify.c
similarity index 100%
rename from smtpd/ssl_verify.c
rename to usr.sbin/smtpd/ssl_verify.c
diff --git a/smtpd/stat_backend.c b/usr.sbin/smtpd/stat_backend.c
similarity index 100%
rename from smtpd/stat_backend.c
rename to usr.sbin/smtpd/stat_backend.c
diff --git a/smtpd/stat_ramstat.c b/usr.sbin/smtpd/stat_ramstat.c
similarity index 100%
rename from smtpd/stat_ramstat.c
rename to usr.sbin/smtpd/stat_ramstat.c
diff --git a/smtpd/table.5 b/usr.sbin/smtpd/table.5
similarity index 100%
rename from smtpd/table.5
rename to usr.sbin/smtpd/table.5
diff --git a/smtpd/table.c b/usr.sbin/smtpd/table.c
similarity index 100%
rename from smtpd/table.c
rename to usr.sbin/smtpd/table.c
diff --git a/smtpd/table_db.c b/usr.sbin/smtpd/table_db.c
similarity index 100%
rename from smtpd/table_db.c
rename to usr.sbin/smtpd/table_db.c
diff --git a/smtpd/table_getpwnam.c b/usr.sbin/smtpd/table_getpwnam.c
similarity index 100%
rename from smtpd/table_getpwnam.c
rename to usr.sbin/smtpd/table_getpwnam.c
diff --git a/smtpd/table_proc.c b/usr.sbin/smtpd/table_proc.c
similarity index 100%
rename from smtpd/table_proc.c
rename to usr.sbin/smtpd/table_proc.c
diff --git a/smtpd/table_static.c b/usr.sbin/smtpd/table_static.c
similarity index 100%
rename from smtpd/table_static.c
rename to usr.sbin/smtpd/table_static.c
diff --git a/smtpd/to.c b/usr.sbin/smtpd/to.c
similarity index 100%
rename from smtpd/to.c
rename to usr.sbin/smtpd/to.c
diff --git a/smtpd/tree.c b/usr.sbin/smtpd/tree.c
similarity index 100%
rename from smtpd/tree.c
rename to usr.sbin/smtpd/tree.c
diff --git a/smtpd/tree.h b/usr.sbin/smtpd/tree.h
similarity index 100%
rename from smtpd/tree.h
rename to usr.sbin/smtpd/tree.h
diff --git a/smtpd/unpack_dns.c b/usr.sbin/smtpd/unpack_dns.c
similarity index 100%
rename from smtpd/unpack_dns.c
rename to usr.sbin/smtpd/unpack_dns.c
diff --git a/smtpd/unpack_dns.h b/usr.sbin/smtpd/unpack_dns.h
similarity index 100%
rename from smtpd/unpack_dns.h
rename to usr.sbin/smtpd/unpack_dns.h
diff --git a/smtpd/util.c b/usr.sbin/smtpd/util.c
similarity index 100%
rename from smtpd/util.c
rename to usr.sbin/smtpd/util.c
diff --git a/smtpd/waitq.c b/usr.sbin/smtpd/waitq.c
similarity index 100%
rename from smtpd/waitq.c
rename to usr.sbin/smtpd/waitq.c
